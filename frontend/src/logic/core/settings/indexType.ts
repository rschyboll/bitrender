// Generated by kea-typegen on Fri, 27 May 2022 12:00:58 GMT. DO NOT EDIT THIS FILE MANUALLY.

import { Logic } from 'kea'

import { SidebarType, Theme } from './types'

export interface settingsLogicType extends Logic {
  actionCreators: {
    setSidebarType: (type: SidebarType) => {
      type: 'set sidebar type (settings)';
      payload: {
        type: SidebarType;
      };
    };
    setTheme: (theme: Theme) => {
      type: 'set theme (settings)';
      payload: {
        theme: Theme;
      };
    };
    toggleSidebar: (newState?: boolean) => {
      type: 'toggle sidebar (settings)';
      payload: {
        newState: boolean | undefined;
      };
    };
  };
  actionKeys: {
    'set sidebar type (settings)': 'setSidebarType';
    'set theme (settings)': 'setTheme';
    'toggle sidebar (settings)': 'toggleSidebar';
  };
  actionTypes: {
    setSidebarType: 'set sidebar type (settings)';
    setTheme: 'set theme (settings)';
    toggleSidebar: 'toggle sidebar (settings)';
  };
  actions: {
    setSidebarType: (type: SidebarType) => void;
    setTheme: (theme: Theme) => void;
    toggleSidebar: (newState?: boolean) => void;
  };
  defaults: {
    theme: Theme;
    sidebarType: SidebarType;
    sidebarActive: boolean;
  };
  events: {};
  key: undefined;
  listeners: {};
  path: ['settings'];
  pathString: 'settings';
  props: Record<string, unknown>;
  reducer: (
    state: any,
    action: any,
    fullState: any,
  ) => {
    theme: Theme;
    sidebarType: SidebarType;
    sidebarActive: boolean;
  };
  reducers: {
    theme: (state: Theme, action: any, fullState: any) => Theme;
    sidebarType: (
      state: SidebarType,
      action: any,
      fullState: any,
    ) => SidebarType;
    sidebarActive: (state: boolean, action: any, fullState: any) => boolean;
  };
  selector: (state: any) => {
    theme: Theme;
    sidebarType: SidebarType;
    sidebarActive: boolean;
  };
  selectors: {
    theme: (state: any, props?: any) => Theme;
    sidebarType: (state: any, props?: any) => SidebarType;
    sidebarActive: (state: any, props?: any) => boolean;
  };
  sharedListeners: {};
  values: {
    theme: Theme;
    sidebarType: SidebarType;
    sidebarActive: boolean;
  };
  _isKea: true;
  _isKeaWithKey: false;
}
