// Generated by kea-typegen on Sun, 07 Aug 2022 10:30:05 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

export interface logicType extends Logic {
  actionCreators: {
    openApp: () => {
      type: 'open app (logic.core.route.index)';
      payload: {
        value: true;
      };
    };
    openRegisterPage: () => {
      type: 'open register page (logic.core.route.index)';
      payload: {
        value: true;
      };
    };
    openLoginPage: () => {
      type: 'open login page (logic.core.route.index)';
      payload: {
        currentPage: string;
      };
    };
    openUsersPage: () => {
      type: 'open users page (logic.core.route.index)';
      payload: {
        value: true;
      };
    };
    openRolesPage: () => {
      type: 'open roles page (logic.core.route.index)';
      payload: {
        value: true;
      };
    };
    openErrorPage: () => {
      type: 'open error page (logic.core.route.index)';
      payload: {
        value: true;
      };
    };
    returnToBeforeLogin: () => {
      type: 'return to before login (logic.core.route.index)';
      payload: {
        value: true;
      };
    };
  };
  actionKeys: {
    'open app (logic.core.route.index)': 'openApp';
    'open register page (logic.core.route.index)': 'openRegisterPage';
    'open login page (logic.core.route.index)': 'openLoginPage';
    'open users page (logic.core.route.index)': 'openUsersPage';
    'open roles page (logic.core.route.index)': 'openRolesPage';
    'open error page (logic.core.route.index)': 'openErrorPage';
    'return to before login (logic.core.route.index)': 'returnToBeforeLogin';
  };
  actionTypes: {
    openApp: 'open app (logic.core.route.index)';
    openRegisterPage: 'open register page (logic.core.route.index)';
    openLoginPage: 'open login page (logic.core.route.index)';
    openUsersPage: 'open users page (logic.core.route.index)';
    openRolesPage: 'open roles page (logic.core.route.index)';
    openErrorPage: 'open error page (logic.core.route.index)';
    returnToBeforeLogin: 'return to before login (logic.core.route.index)';
  };
  actions: {
    openApp: () => void;
    openRegisterPage: () => void;
    openLoginPage: () => void;
    openUsersPage: () => void;
    openRolesPage: () => void;
    openErrorPage: () => void;
    returnToBeforeLogin: () => void;
  };
  defaults: {
    beforeLoginPage: null | string;
  };
  events: {};
  key: undefined;
  listeners: {
    returnToBeforeLogin: ((
      action: {
        type: 'return to before login (logic.core.route.index)';
        payload: {
          value: true;
        };
      },
      previousState: any,
    ) => void | Promise<void>)[];
  };
  path: ['logic', 'core', 'route', 'index'];
  pathString: 'logic.core.route.index';
  props: Record<string, unknown>;
  reducer: (
    state: any,
    action: any,
    fullState: any,
  ) => {
    beforeLoginPage: null | string;
  };
  reducers: {
    beforeLoginPage: (
      state: null | string,
      action: any,
      fullState: any,
    ) => null | string;
  };
  selector: (state: any) => {
    beforeLoginPage: null | string;
  };
  selectors: {
    beforeLoginPage: (state: any, props?: any) => null | string;
  };
  sharedListeners: {};
  values: {
    beforeLoginPage: null | string;
  };
  _isKea: true;
  _isKeaWithKey: false;
}
